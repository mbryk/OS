%!PS-Adobe-3.0
%%Creator: groff version 1.19.1
%%CreationDate: Tue Dec  3 21:38:40 2013
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Courier
%%+ font Times-Italic
%%DocumentSuppliedResources: file sigstack.eps
%%+ file sigstructs.eps
%%+ procset grops 1.19 1
%%Pages: 13
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.19 1
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Courier
%%IncludeResource: font Times-Italic
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Courier@0 ENC0/Courier RE
/Times-Bold@0 ENC0/Times-Bold RE/Times-Roman@0 ENC0/Times-Roman RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)69.336 60 Q
(Unit 11/pg 1)53.748 E(\2512013 Jef)124.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Bold@0 SF(Signals)247.465 120 Q/F2 13/Times-Roman@0
SF .214(From the user)33.336 156 R(-le)-.26 E -.195(ve)-.325 G 3.464(ls)
.195 G .213
(tandpoint signals appear to be lightning bolts which can come out of)
-3.464 F 1.1(the sk)33.336 171 R 4.35(ya)-.195 G 4.35(ta)-4.35 G 1.49
-.195(ny m)-4.35 H 4.35(oment. In).195 F -.13(fa)4.35 G 1.101
(ct, signals are carefully controlled and manipulated by the).13 F -.13
(ke)33.336 186 S 3.25(rnel. There).13 F(are tw)3.25 E 3.25(od)-.13 G
(istinct phases to a signal:)-3.25 E<83>33.336 201 Q F1(Raising)4.601 E
F2(aka)4.601 E F1(Generating)4.6 E F2 4.6(as)4.6 G 1.35(ignal: The k)
-4.6 F 1.35(ernel k)-.13 F 1.35(eeps track of pending signals for each)
-.13 F 5.285(process. There)33.336 216 R 2.035(are numerous k)5.285 F
2.036(ernel routines which generate a ne)-.13 F 5.286(ws)-.325 G 5.286
(ignal. These)-5.286 F(are)5.286 E .445
(called either by a system call \(e.g.)33.336 231 R/F3 13/Courier@0 SF
(kill)3.695 E F2 3.694(\)o)C 3.694(ra)-3.694 G 3.694(sp)-3.694 G .444
(art of the k)-3.694 F(ernel')-.13 E 3.694(se)-.715 G -.195(ve)-4.019 G
.444(nt processing \(e.g.).195 F(handling a synchronous f)33.336 246 Q
(ault interrupt\).)-.13 E<83>33.336 261 Q F1(Deli)5.037 E -.13(ve)-.13 G
(ring).13 E F2 1.787
(the signal: The signal is "noticed" by the process in k)5.037 F 1.788
(ernel mode as it is)-.13 F .151(about to return back to user mode.)
33.336 276 R .151
(Instead of returning directly back to the user program,)6.651 F 1.516
(the appropriate action is tak)33.336 291 R 4.766(en. This)-.13 F 1.516
(action may be to terminate the process, terminate)4.766 F
(and dump core, or in)33.336 306 Q -.26(vo)-.52 G .26 -.13(ke t).26 H
(he de\214ned signal handler).13 E(.)-.715 E F1(Signal data structur)
206.424 336 Q(es)-.234 E F2 .097(In the Linux k)33.336 372 R .097
(ernel, the)-.13 F F3 .096(struct task_struct)3.347 F F2 .096
(of each process contains se)3.346 F -.195(ve)-.325 G .096(ral \214elds)
.195 F(pertaining to signals:)33.336 387 Q/F4 10/Courier@0 SF
(struct task_struct {)33.336 399 Q(/*...*/)33.336 411 Q
(struct signal_struct)33.336 423 Q 3.6(*signal; /*)52.8 F
(shared signals */)6 E(struct sigpending)33.336 435 Q 26.4(*pending; /*)
42 F(private signals */)6 E(struct sighand_struct)33.336 447 Q 26.4
(*sighand; /*)18 F(signal handling */)6 E 90(sigset_t blocked;)33.336
459 R(/* bitmask of blocked signals */)38.4 E F2 1.687(There are tw)
33.336 480 R 4.937(ol)-.13 G 1.687(ists of pending signals, and the dis\
tinction comes into play with multi-)-4.937 F .979(threaded programs.)
33.336 495 R .979
(Shared signals are those sent to the entire thread group.)7.479 F .979
(The signal)7.479 F .905(will be deli)33.336 510 R -.195(ve)-.325 G .906
(red once, to one of the threads \(which is not currently blocking that\
 signal).195 F 3.273(number\). Pri)33.336 525 R -.325(va)-.325 G .023
(te signals are sent to speci\214c threads.).325 F 2.102 -1.04(We w)
6.522 H .022(ill ignore this aspect of signals)1.04 F
(as well as POSIX real-time signals, and re)33.336 540 Q(vie)-.325 E
3.25(wo)-.325 G(nly traditional, shared signals.)-3.25 E(The)33.336 561
Q F3 .765(struct signal_struct)4.015 F F2 .766
(contains some things which really ha)4.016 F 1.156 -.195(ve n)-.26 H
.766(othing to do).195 F(with signals, b)33.336 576 Q
(ut are there for historical reasons:)-.26 E F4(struct signal_struct {)
33.336 588 Q(/*...*/)33.336 600 Q 30(wait_queue_head_t wait_chldexit;)
33.336 612 R(/* Wait queue for wait syscall */)8.4 E(struct sigpending)
33.336 624 Q 6(shared_pending; /*)36 F(Pending signal list */)6 E 114
(int group_exit_code;)33.336 636 R(/* Process termination code */)6 E F2
2.428(Of interest is)33.336 651 R F3(shared_pending)5.678 E F2 5.678(,w)
C 2.428(hich is the list of shared signals \(i.e. traditional)-5.678 F
3.242(signals which are deli)33.336 666 R -.195(ve)-.325 G 3.242
(red to the entire process and not a particular thread\).).195 F(This)
9.742 E(structure is:)33.336 681 Q F4(struct sigpending {)33.336 693 Q
(struct list_head list;)90.936 705 Q(/* list of sigqueue */)98.4 E 6
(sigset_t signal;)90.936 717 R(/* bitmask */)70.8 E(};)33.336 729 Q 0 Cg
EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 11/pg 2)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF 12.644
(Therefore the list of pending signals for the process is rooted at)
33.336 120 R/F2 13/Courier@0 SF(current->signal->shared_pending.list)
33.336 135 Q F1 13.457(.T)C 6.957(he bitmask allo)-13.457 F 6.958
(ws a quick)-.325 F .189(determination if a particular signal number \(\
e.g. SIGINT\) is pending.)33.336 150 R .188(Then each member)6.688 F
(of the list is:)33.336 165 Q/F3 10/Courier@0 SF(struct sigqueue {)
33.336 177 Q(struct list_head)90.936 189 Q 48(list; /*)12 F
(chain pointers */)6 E 42(spinlock_t *lock; /*)90.936 201 R
(ptr to lock in sigaction */)6 E 84(int flags;)90.936 213 R 48
(siginfo_t info;)90.936 225 R(/* sig# and other info */)82.8 E
(struct user_struct *user;)90.936 237 Q(/* ptr back to user struct */)
22.8 E(};)33.336 249 Q F1(The)33.336 270 Q F2 6.06
(struct sighand_struct *sighand)9.309 F F1 6.06(member of the)9.31 F F2
(task_struct)9.31 E F1
(contains the signal handling information for the task:)33.336 285 Q F3
(struct sighand_struct {)33.336 297 Q 90(atomic_t count;)81.336 309 R
(// don't worry about it!)60 E(struct k_sigaction)81.336 321 Q
(action[_NSIG];)36 E 78(spinlock_t siglock;)81.336 333 R 36
(wait_queue_head_t signalfd_wqh;)81.336 345 R(// don't worry about it!)
75.6 E(};)33.336 357 Q F1 3.358 -1.04(We s)33.336 390 T 1.277(ee that t\
here is a table, with one entry for each of the 64 possible signal numb\
ers,)1.04 F(gi)33.336 405 Q .7
(ving the handling status of each, represented as a)-.325 F F2 .7
(struct k_sigaction)3.95 F F1 3.95(,w)C .7(hich in)-3.95 F .558(the cas\
e of Linux on a 32-bit X86 machine is simply the same as the user)33.336
420 R(-le)-.26 E -.195(ve)-.325 G(l).195 E F2(struct)3.808 E(sigaction)
33.336 435 Q F1 6.946(.E)C .447(ach entry thereof contains a user)-6.946
F .447(-mode handler address \(which may also)-.26 F 2.298
(contain the v)33.336 450 R 2.297(alue SIG_DFL or SIG_IGN\), a set of \
\215ags, and a bitmask of additional)-.325 F(signals to be mask)33.336
465 Q(ed when handling this signal.)-.13 E 0 0 468 874 -243.103 454
33.336 729.103 PBEGIN
%%BeginDocument: sigstructs.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: sigstructs.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Tue Apr 17 23:00:05 2012
%%For: hak@lex ()
%%BoundingBox: 0 0 874 454
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 454 moveto 0 0 lineto 874 0 lineto 874 454 lineto closepath clip newpath
-108.0 486.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
n 10800 1950 m 12300 1950 l 12300 4200 l 10800 4200 l
 cp gs col0 s gr 
% Polyline
n 10800 2925 m 12300 2925 l 12300 3825 l 10800 3825 l
 cp gs col0 s gr 
/Times-Roman ff 200.00 scf sf
11025 1800 m
gs 1 -1 sc (sigqueue) col0 sh gr
/Times-Roman ff 200.00 scf sf
10950 2850 m
gs 1 -1 sc (.info) col0 sh gr
/Times-Roman ff 200.00 scf sf
11100 3225 m
gs 1 -1 sc (.si_signo) col0 sh gr
% Polyline
n 12675 1950 m 14175 1950 l 14175 4200 l 12675 4200 l
 cp gs col0 s gr 
% Polyline
n 12675 2925 m 14175 2925 l 14175 3825 l 12675 3825 l
 cp gs col0 s gr 
/Times-Roman ff 200.00 scf sf
12900 1800 m
gs 1 -1 sc (sigqueue) col0 sh gr
/Times-Roman ff 200.00 scf sf
12825 2850 m
gs 1 -1 sc (.info) col0 sh gr
/Times-Roman ff 200.00 scf sf
12975 3225 m
gs 1 -1 sc (.si_signo) col0 sh gr
% Polyline
n 14325 1950 m 15825 1950 l 15825 4200 l 14325 4200 l
 cp gs col0 s gr 
% Polyline
n 14325 2925 m 15825 2925 l 15825 3825 l 14325 3825 l
 cp gs col0 s gr 
/Times-Roman ff 200.00 scf sf
14550 1800 m
gs 1 -1 sc (sigqueue) col0 sh gr
/Times-Roman ff 200.00 scf sf
14475 2850 m
gs 1 -1 sc (.info) col0 sh gr
/Times-Roman ff 200.00 scf sf
14625 3225 m
gs 1 -1 sc (.si_signo) col0 sh gr
% Polyline
gs  clippath
3465 930 m 3465 870 l 3313 870 l 3433 900 l 3313 930 l cp
eoclip
n 2475 900 m
 3450 900 l gs col0 s gr gr

% arrowhead
n 3313 930 m 3433 900 l 3313 870 l  col0 s
% Polyline
n 3450 900 m 5100 900 l 5100 6300 l 3450 6300 l
 cp gs col0 s gr 
% Polyline
n 3450 1500 m 5100 1500 l 5100 1800 l 3450 1800 l
 cp gs col0 s gr 
% Polyline
n 3450 1800 m 5100 1800 l 5100 2100 l 3450 2100 l
 cp gs col0 s gr 
% Polyline
n 3450 2100 m 5100 2100 l 5100 2400 l 3450 2400 l
 cp gs col0 s gr 
% Polyline
gs  clippath
6015 1680 m 6015 1620 l 5863 1620 l 5983 1650 l 5863 1680 l cp
eoclip
n 5025 1650 m
 6000 1650 l gs col0 s gr gr

% arrowhead
n 5863 1680 m 5983 1650 l 5863 1620 l  col0 s
% Polyline
n 6000 1575 m 7500 1575 l 7500 2400 l 6000 2400 l
 cp gs col0 s gr 
% Polyline
n 6000 1875 m 7500 1875 l 7500 2175 l 6000 2175 l
 cp gs col0 s gr 
% Polyline
n 8325 1500 m 9600 1500 l 9600 3000 l 8325 3000 l
 cp gs col0 s gr 
% Polyline
n 8325 2550 m 9600 2550 l 9600 2850 l 8325 2850 l
 cp gs col0 s gr 
% Polyline
n 8325 1725 m 9600 1725 l 9600 2250 l 8325 2250 l
 cp gs col0 s gr 
% Polyline
gs  clippath
10813 2055 m 10816 1995 l 10664 1987 l 10783 2024 l 10661 2047 l cp
eoclip
n 9375 1950 m
 10800 2025 l gs col0 s gr gr

% arrowhead
n 10661 2047 m 10783 2024 l 10664 1987 l  col0 s
% Polyline
gs  clippath
12690 2205 m 12690 2145 l 12538 2145 l 12658 2175 l 12538 2205 l cp
eoclip
n 12150 2175 m
 12675 2175 l gs col0 s gr gr

% arrowhead
n 12538 2205 m 12658 2175 l 12538 2145 l  col0 s
% Polyline
gs  clippath
14415 2130 m 14415 2070 l 14263 2070 l 14383 2100 l 14263 2130 l cp
eoclip
n 14025 2100 m
 14400 2100 l gs col0 s gr gr

% arrowhead
n 14263 2130 m 14383 2100 l 14263 2070 l  col0 s
% Polyline
gs  clippath
8340 1680 m 8340 1620 l 8188 1620 l 8308 1650 l 8188 1680 l cp
eoclip
n 15825 2175 m 16350 2175 l 16350 1425 l 7800 1425 l 7800 1650 l
 8325 1650 l gs col0 s gr gr

% arrowhead
n 8188 1680 m 8308 1650 l 8188 1620 l  col0 s
% Polyline
gs  clippath
15820 2216 m 15801 2273 l 15945 2321 l 15841 2255 l 15964 2264 l cp
eoclip
n 8400 2025 m 8025 2025 l 8025 4350 l 16275 4350 l 16275 2400 l
 15825 2250 l gs col0 s gr gr

% arrowhead
n 15964 2264 m 15841 2255 l 15945 2321 l  col0 s
% Polyline
gs  clippath
14017 2217 m 14003 2275 l 14150 2312 l 14041 2254 l 14164 2254 l cp
eoclip
n 14625 2400 m
 14025 2250 l gs col0 s gr gr

% arrowhead
n 14164 2254 m 14041 2254 l 14150 2312 l  col0 s
% Polyline
gs  clippath
11615 2217 m 11605 2276 l 11753 2303 l 11641 2253 l 11764 2244 l cp
eoclip
n 12900 2475 m
 11625 2250 l gs col0 s gr gr

% arrowhead
n 11764 2244 m 11641 2253 l 11753 2303 l  col0 s
% Polyline
gs  clippath
9141 1992 m 9129 2051 l 9277 2080 l 9166 2028 l 9289 2022 l cp
eoclip
n 11025 2400 m
 9150 2025 l gs col0 s gr gr

% arrowhead
n 9289 2022 m 9166 2028 l 9277 2080 l  col0 s
% Polyline
gs  clippath
5983 5129 m 6033 5095 l 5949 4969 l 5991 5086 l 5899 5002 l cp
eoclip
n 4800 1950 m 5700 1950 l 5700 4650 l
 6000 5100 l gs col0 s gr gr

% arrowhead
n 5899 5002 m 5991 5086 l 5949 4969 l  col0 s
% Polyline
n 6000 4950 m 7800 4950 l 7800 8100 l 6000 8100 l
 cp gs col0 s gr 
% Polyline
n 6000 6300 m 7800 6300 l 7800 7500 l 6000 7500 l
 cp gs col0 s gr 
% Polyline
n 6000 6900 m
 7800 6900 l gs col0 s gr 
% Polyline
n 6000 7050 m
 7800 7050 l gs col0 s gr 
% Polyline
n 6000 7200 m
 7800 7200 l gs col0 s gr 
% Polyline
n 6000 7350 m
 7800 7350 l gs col0 s gr 
% Polyline
n 6000 6750 m
 7800 6750 l gs col0 s gr 
% Polyline
n 6000 6600 m
 7800 6600 l gs col0 s gr 
% Polyline
n 6000 6450 m
 7800 6450 l gs col0 s gr 
% Polyline
n 7725 6525 m
 8625 5850 l gs col0 s gr 
% Polyline
n 7800 6525 m
 8550 7050 l gs col0 s gr 
% Polyline
n 8775 5925 m 10275 5925 l 10275 6900 l 8775 6900 l
 cp gs col0 s gr 
% Polyline
gs  clippath
7319 6361 m 7357 6407 l 7474 6312 l 7363 6365 l 7436 6265 l cp
eoclip
n 8175 5700 m
 7350 6375 l gs col0 s gr gr

% arrowhead
n 7436 6265 m 7363 6365 l 7474 6312 l  col0 s
% Polyline
gs  clippath
7472 6505 m 7500 6558 l 7635 6488 l 7515 6517 l 7607 6434 l cp
eoclip
n 9225 5625 m
 7500 6525 l gs col0 s gr gr

% arrowhead
n 7607 6434 m 7515 6517 l 7635 6488 l  col0 s
% Polyline
gs  clippath
7719 7392 m 7702 7449 l 7847 7492 l 7741 7430 l 7864 7434 l cp
eoclip
n 9525 7950 m
 7725 7425 l gs col0 s gr gr

% arrowhead
n 7864 7434 m 7741 7430 l 7847 7492 l  col0 s
% Polyline
 [60] 0 sd
n 8250 1575 m
 7425 1875 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 7425 2100 m
 8250 2925 l gs col0 s gr  [] 0 sd
/Times-Roman ff 200.00 scf sf
1800 900 m
gs 1 -1 sc (current) col0 sh gr
/Times-Roman ff 200.00 scf sf
3900 750 m
gs 1 -1 sc (task_struct) col0 sh gr
/Times-Roman ff 200.00 scf sf
3825 1725 m
gs 1 -1 sc (signal) col0 sh gr
/Times-Roman ff 200.00 scf sf
3825 2025 m
gs 1 -1 sc (sighand) col0 sh gr
/Times-Roman ff 200.00 scf sf
3825 2325 m
gs 1 -1 sc (blocked\(BM\)) col0 sh gr
/Times-Roman ff 200.00 scf sf
6075 1425 m
gs 1 -1 sc (signal_struct) col0 sh gr
/Times-Roman ff 200.00 scf sf
6150 2100 m
gs 1 -1 sc (shared_pending) col0 sh gr
/Times-Roman ff 200.00 scf sf
8550 1350 m
gs 1 -1 sc (sigpending) col0 sh gr
/Times-Roman ff 200.00 scf sf
8550 2775 m
gs 1 -1 sc (signal\(BM\)) col0 sh gr
/Times-Roman ff 200.00 scf sf
6225 4725 m
gs 1 -1 sc (sighand_struct) col0 sh gr
/Times-Roman ff 200.00 scf sf
6300 6150 m
gs 1 -1 sc (.action) col0 sh gr
/Times-Roman ff 200.00 scf sf
9000 6150 m
gs 1 -1 sc (.sa_flags) col0 sh gr
/Times-Roman ff 200.00 scf sf
9000 6405 m
gs 1 -1 sc (.sa_mask) col0 sh gr
/Times-Roman ff 200.00 scf sf
9000 6660 m
gs 1 -1 sc (.sa_handler) col0 sh gr
/Times-Roman ff 200.00 scf sf
8175 5625 m
gs 1 -1 sc (SIGHUP) col0 sh gr
/Times-Roman ff 200.00 scf sf
9300 5550 m
gs 1 -1 sc (SIGINT) col0 sh gr
/Times-Roman ff 200.00 scf sf
9600 7950 m
gs 1 -1 sc (SIGRTMAX) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 11/pg 3)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Bold@0 SF(Generating a signal)213.165 120 Q/F2 13
/Times-Roman@0 SF 3.25(As)33.336 150 S
(ignal may be generated or raised ag)-3.25 E(ainst a tar)-.065 E
(get task :)-.234 E 4.262<8357>33.336 165 S 1.012
(hen another \(or possibly the same\) task e)-4.262 F 1.013
(xplicitly sends the signal, e.g. with the kill)-.195 F(system call.)
33.336 180 Q 4.39<8357>33.336 195 S 1.14
(hen another process causes an e)-4.39 F -.195(ve)-.325 G 1.139
(nt which generates a signal.).195 F 4.389(E.g. a)7.639 F 1.139
(child process)4.389 F -.195(ex)33.336 210 S
(its and generates SIGCHLD for its parent.).195 E 4.368<8357>33.336 225
S 1.118(hen the tar)-4.368 F 1.118(get task is in the k)-.234 F 1.118
(ernel for a system call, and a condition is encountered)-.13 F
(which causes a signal.)33.336 240 Q(E.g. SIGPIPE.)6.5 E 4.236<8357>
33.336 255 S .986(hen the tar)-4.236 F .986(get task is in the k)-.234 F
.986(ernel for a f)-.13 F .985(ault handler and the k)-.13 F .985
(ernel determines that)-.13 F(the f)33.336 270 Q(ault merits a signal.)
-.13 E(E.g. SIGSEGV)6.5 E 3.25(,S)-1.677 G(IGB)-3.25 E(US, SIGILL.)-.13
E 5.375<8341>33.336 285 S 5.375(sad)-5.375 G 2.125
(irect or indirect result of a k)-5.375 F 2.126(ernel hardw)-.13 F 2.126
(are interrupt handler)-.13 F 8.626(.E)-.715 G 2.126(xamples: I/O)-8.626
F -2.795 -.325(ev e)33.336 300 T 1.452(nt completes and process has re)
.325 F 1.451(gistered to recei)-.195 F 1.841 -.195(ve S)-.325 H 1.451
(IGIO signals.).195 F 1.451(Character arri)7.951 F -.195(ve)-.325 G(s)
.195 E 4.173(on a terminal de)33.336 315 R 4.173
(vice which is the interrupt character \(typically Control-C\), which)
-.325 F .561(generates a SIGINT to the fore)33.336 330 R .561
(ground processes attached to that terminal.)-.195 F -.455(Ti)7.061 G
.561(mer e).455 F(xpires)-.195 E
(and process has requested SIGALARM or SIGVT)33.336 345 Q(ALRM.)-1.209 E
F1 -.325(Fo)224.579 375 S(llo).325 E(wing a kill)-.13 E F2 1.509
(Generation of a signal is the same, re)33.336 411 R -.065(ga)-.195 G
1.51(rdless of the cause.).065 F 1.51(Let us follo)8.01 F 4.76(wt)-.325
G 1.51(he chain of)-4.76 F -2.795 -.325(ev e)33.336 426 T
(nts when one process sends a signal to another with the).325 E/F3 13
/Courier@0 SF(kill)3.25 E F2(system call:)3.25 E/F4 10/Courier@0 SF
(asmlinkage long)33.336 438 Q(sys_kill\(int pid, int sig\))33.336 450 Q
({)33.336 462 Q(struct siginfo info;)81.336 474 Q(info.si_signo = sig;)
81.336 498 Q(info.si_errno = 0;)81.336 510 Q(info.si_code = SI_USER;)
81.336 522 Q(info.si_pid = current->tgid;)81.336 534 Q
(info.si_uid = current->uid;)81.336 546 Q
(return kill_something_info\(sig, &info, pid\);)81.336 570 Q(})33.336
582 Q F2(The)33.336 603 Q F3(siginfo)3.741 E F2 .49
(structure stores information about a particular instance of a signal.)
3.741 F .49(It is a)6.99 F .162(rather length)33.336 618 R 3.412(yd)
-.065 G .163(e\214nition because it contains a union of all the possibl\
e sets of information)-3.412 F 1.74(which could accompan)33.336 633 R
4.99(yas)-.195 G 1.74(ignal, depending on the source \(kill, f)-4.99 F
1.74(ault, child e)-.13 F 1.74(xit, etc.\).)-.195 F 12.961
(The interested reader is in)33.336 648 R 12.961(vited to look at)-.52 F
F3(/usr/src/linux/asm-)16.211 E(generic/siginfo.h)33.336 663 Q F2 6.526
(.I)C 3.276(nt)-6.526 G .026(his case, the code)-3.276 F F3(SI_USER)
3.276 E F2 .026(indicates the signal originated)3.276 F
(with another user)33.336 678 Q(-mode process.)-.26 E F3
(kill_something_info)33.336 699 Q F2 3.849(interprets the)7.099 F F3
(pid)7.099 E F2 3.85(parameter \(recall that in addition to)7.099 F
-.195(ex)33.336 714 S .117(plicitly gi).195 F .117
(ving the pid of the tar)-.325 F .117(get process, one can tar)-.234 F
.117(get an entire)-.234 F/F5 13/Times-Italic@0 SF(pr)3.367 E .117
(ocess gr)-.585 F(oup)-.585 E F2 .117(or all)3.367 F
(processes belonging to the same user\).)33.336 729 Q(It in turn calls:)
6.5 E F4(int kill_proc_info\(int sig, struct siginfo *info, pid_t pid\))
33.336 741 Q 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 11/pg 4)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF({)33.336 117 Q(int error;)81.336 129 Q
(struct task_struct *p;)81.336 141 Q
(// Searching task list done under blocking reader lock)90.936 165 Q
(// so we don't either miss a task or select a task which)90.936 177 Q
(// has already disappeared)90.936 189 Q(read_lock\(&tasklist_lock\);)
81.336 201 Q 6(p=f)81.336 213 S(ind_task_by_pid\(pid\);)-6 E
(error = -ESRCH;)81.336 225 Q(// Error if pid not found)92.4 E(if \(p\))
81.336 237 Q(error = group_send_sig_info\(sig, info, p\);)129.336 249 Q
(read_unlock\(&tasklist_lock\);)81.336 261 Q(return error;)81.336 273 Q
(})33.336 285 Q/F2 13/Times-Roman@0 SF .046(Here we see the)33.336 306 R
/F3 13/Times-Italic@0 SF .046(task list)3.296 F F2 .046(in action.)3.296
F .046(There are a number of identi\214ers which can be used to)6.546 F
(\214nd one or more processes.)33.336 321 Q(The)6.5 E 3.25(ya)-.195 G
(re:)-3.25 E 3.25<8350>33.336 336 S
(ID: The real task \(process\) id, unique for each task in the system.)
-3.25 E 3.669<8354>33.336 351 S .418(GID: Thread group id.)-3.669 F
(Equi)6.918 E -.325(va)-.325 G .418
(lent to PID for single-threaded applications.).325 F -.195(Fo)6.918 G
3.668(rm).195 G(ulti-)-3.668 E
(threaded programs, there are multiple PIDS per TGID.)33.336 366 Q 3.323
<8350>33.336 381 S .073(GRP: Process group id.)-3.323 F .073
(Process groups are used primarily for signal deli)6.573 F -.195(ve)
-.325 G .073(ry tar).195 F(geting)-.234 E
(where a group of processes is w)33.336 396 Q(orking together)-.13 E
3.25(,e)-.52 G(.g. a pipeline.)-3.25 E 5.446<8353>33.336 411 S 2.196
(ID: Session id.)-5.446 F 2.196
(All processes associated with a particular interacti)8.696 F 2.586
-.195(ve l)-.325 H 2.195(ogin session).195 F .249(share an SID.)33.336
426 R .25(This is used in conjunction with the tty subsystem, e.g. to \
\214gure out which)6.749 F
(processes should be killed when the session is lost.)33.336 441 Q .442
(Besides the global list of all tasks \()33.336 462 R/F4 13/Courier@0 SF
(tasks)A F2 .442(list_head entry in struct task_struct\), there are)
3.692 F 1.149(multiple hash lists used to quickly \214nd matching)33.336
477 R F4 1.15(struct task_struct)4.4 F F2 1.15(based on a)4.4 F(gi)
33.336 492 Q -.195(ve)-.325 G 19.563(ni).195 G 19.563(d\()-19.563 G F4
16.313(struct pid_link pids[PIDTYPE_MAX])-19.563 F F2(in)19.563 E F4
(struct)19.562 E(task_struct)33.336 507 Q F2 4.759(\). So,)B(abo)4.759 E
1.899 -.195(ve w)-.195 H 4.759(es).195 G(ee)-4.759 E F4
(find_task_by_pid)4.759 E F2 1.509(being used to look up the)4.759 F
1.038(pid and return the task structure pointer)33.336 522 R 7.538(.N)
-.715 G -.325(ow)-7.538 G F4(group_send_sig_info)4.612 E F2 1.037
(will be used)4.287 F .567
(to post a shared signal to the entire thread group \(ag)33.336 537 R
.567(ain, for con)-.065 F -.195(ve)-.52 G .567(ntional single-threaded)
.195 F(applications, this is just the single tar)33.336 552 Q
(get process\).)-.234 E F1(int group_send_sig_info\(int sig, struct sig\
info *info, struct task_struct *p\))33.336 564 Q({)33.336 576 Q
(unsigned long flags;)81.336 588 Q(int ret;)81.336 600 Q
(ret = check_kill_permission\(sig, info, p\);)81.336 624 Q
(if \(!ret && sig\) {)81.336 636 Q
(spin_lock\(&p->sighand->siglock, flags\);)129.336 648 Q
(ret = send_signal\(sig, info, p\);)129.336 660 Q
(spin_unlock\(&p->sighand->siglock, flags\);)129.336 672 Q(})81.336 684
Q(return ret;)81.336 708 Q(})33.336 720 Q 0 Cg EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 11/pg 5)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF(/* Greatly simplified to remove details rega\
rding per-thread and rt signals */)33.336 117 Q(int send_signal\(int si\
g, struct siginfo *info, struct task_struct *t\))33.336 129 Q({)33.336
141 Q(struct sigqueue *q;)39.336 153 Q 20.4
(trace_signal_generate\(sig,info,t\); //hook)90.936 165 R(for strace)6 E
(if \(sig_ignored\(p, sig\)\))81.336 177 Q(/* check sigaction array)38.4
E(for SIG_IGN */)12 E({)90.936 189 Q
(/* sig_ignored concludes that the signal can be ignored)148.536 201 Q
(only if all of the following 3 conditions are true: */)166.536 213 Q
(1\) The process is not being traced \(if so)206.136 225 Q
(signal must be taken so tracing process)263.736 237 Q(will see this \))
263.736 249 Q(2\) The sa_handler in the sighand->action table)206.136
261 Q(is SIG_IGN)263.736 273 Q
(3\) The signal is not being blocked \(if it were,)206.136 285 Q
(we must remember it....when it becomes)263.736 297 Q
(unblocked the disposition may no longer)263.736 309 Q(be SIG_IGN\))
263.736 321 Q(*/)164.4 E(return 0;)129.336 333 Q(})90.936 345 Q
(/* Non real-time signals \(<32\) do not queue more than once */)90.936
357 Q(if \(sig<32 && sigismember\(&p->pending.signal\))90.936 369 Q
(return ret;)148.536 381 Q(q=sigqueue_alloc\(sig,t\);)90.936 393 Q
(if \(q\) {)90.936 405 Q
(//if q alloc fails, usually silent loss of info)9.6 E
(list_add_tail\(&q->list,&t->signal->shared_pending.list\);)148.536 417
Q(copy_siginfo\(&q->info,info\);)148.536 429 Q(})90.936 441 Q
(sigaddset\(&t->signal->shared_pending.signal,sig\);)90.936 453 Q
(complete_signal\(sig,t\);)90.936 465 Q(return 0;)90.936 477 Q(})33.336
489 Q(complete_signal\(int sig, struct task_struct *p\))33.336 513 Q({)
33.336 525 Q(struct task_struct *t;)90.936 537 Q
(//for multithreaded processes, find best thread to take signal)90.936
549 Q(//for singlethreaded, t=p)90.936 561 Q
(// call signal_wake_up\(t\), code inlined below:)90.936 573 Q
(t->thread_info.flags |= TIF_SIGPENDING;)90.936 585 Q
(if \(t->state==TASK_INTERRUPTIBLE\))90.936 597 Q(wake_up\(t\);)148.536
609 Q(else)90.936 621 Q 13.2(kick_process\(t\); //)148.536 633 R
(Will send an IPI on multiproc system)6 E(})33.336 657 Q/F2 13/Courier@0
SF(check_kill_permissions)33.336 684 Q/F3 13/Times-Roman@0 SF -.195(ve)
4.491 G 1.24(ri\214es that the signal number is v).195 F 1.24
(alid \(between 0 and)-.325 F .92
(63\) and that the sending user has permission to send it to the tar)
33.336 699 R .921(get process.)-.234 F .921(The signal)7.421 F 2.373(nu\
mber 0 is used just to test for such permission \(or to probe for the e)
33.336 714 R 2.372(xistence of a)-.195 F
(particular pid\) and does not actually cause a signal to be posted.)
33.336 729 Q 0 Cg EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 11/pg 6)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF 1.956
(The process which sent the signal will see a successful return from)
33.336 120 R/F2 13/Courier@0 SF(sys_kill)5.206 E F1 8.456(.T)C(he)-8.456
E(tar)33.336 135 Q .051(get process has the)-.234 F F2(TIF_SIGPENDING)
3.3 E F1 .05(\215ag set.)3.3 F .05(Therefore, the ne)6.55 F .05
(xt time it is about to)-.195 F 1.072(return from k)33.336 150 R 1.073(\
ernel to user mode, this \215ag will be noticed, and rather than return\
ing, the)-.13 F(signal will be deli)33.336 165 Q -.195(ve)-.325 G(red.)
.195 E .949
(On a uniprocessor system, the signal sender task and the tar)33.336 186
R .949(get task \(unless the)-.234 F 4.199(ya)-.195 G .949(re the)-4.199
F .795(same\) can not be truly e)33.336 201 R -.195(xe)-.195 G .795
(cuting at the same time.).195 F .796
(Since the signal sender is running in)7.296 F .305(the k)33.336 216 R
.305(ernel, the tar)-.13 F .305
(get is either sleeping or in the ready \(not on cpu\) state.)-.234 F
.304(But, on a multi-)6.804 F 1.079
(processor system, it could be the case that the tar)33.336 231 R 1.079
(get is also running at the time that the)-.234 F 1.032
(sender is in the k)33.336 246 R 1.032(ernel sending the signal.)-.13 F
1.031(Since signals can only be noticed \(deli)7.532 F -.195(ve)-.325 G
(red\)).195 E 1.226(when control is about to return from k)33.336 261 R
1.227(ernel mode back to user mode, some mechanism)-.13 F 1.518
(must be present to force the tar)33.336 276 R 1.518
(get task to enter k)-.234 F 1.517
(ernel mode \(other than the timer tick)-.13 F 6.758
(interrupt, which may be a v)33.336 291 R 6.758(ery long millisecond a)
-.195 F -.13(wa)-.195 G 10.008(y\). This).13 F 6.758(is handled in)
10.008 F 4.052(complete_signal\(\) by the kick_process function, which \
can send an Inter)33.336 306 R(-Processor)-.26 E
(Interrupt \(IPI\) to the tar)33.336 321 Q(get task')-.234 E 3.25(sp)
-.715 G(rocessor)-3.25 E(.)-.715 E/F3 13/Times-Bold@0 SF(Signal Deli)
225.034 351 Q -.13(ve)-.13 G(ry).13 E F1 .405
(Signals may be generated ag)33.336 381 R .405(ainst a task at an)-.065
F 3.655(yt)-.195 G .405(ime, b)-3.655 F .405(ut can only be deli)-.26 F
-.195(ve)-.325 G .406(red to the task).195 F
(when it is running in the k)33.336 396 Q
(ernel, and about to return back to user mode.)-.13 E .223(When the ass\
embly language glue code dealing with return to user mode \(see unit 8\
\) sees)33.336 417 R 1.185
(\215ags in the thread_info structure, control passes to)33.336 432 R F2
(work_notify_sig)4.436 E F1 1.186(which in turn)4.436 F(calls the k)
33.336 447 Q(ernel function)-.13 E F2(do_notify_resume:)3.25 E F1 3.25
(,w)C(hich calls)-3.25 E F2(do_signal)3.25 E F1(:)A/F4 10/Courier@0 SF
(#From kernel/entry.S)33.336 459 Q 192(work_notifysig: #)33.336 471 R
(thread flags already in ECX)6 E(movl %esp, %eax)81.336 483 Q 6(#p)150 G
(ut sp into arg 1)-6 E(xorl %edx, %edx)81.336 495 Q 6(#p)150 G
(ut NULL into arg 2)-6 E(call do_notify_resume)81.336 507 Q
(jmp resume_userspace)81.336 519 Q 6(#r)62.4 G(esume return to userland)
-6 E(// From kernel/signal.c)33.336 543 Q(// Note that regs points to t\
he saved user-mode registers on the kernel stack)33.336 555 Q
(__attribute__\(\(regparm\(3\)\)\))33.336 567 Q
(void do_notify_resume\(struct pt_regs *regs, sigset_t *oldset,)33.336
579 Q(__u32 thread_info_flags\))165.336 591 Q({)33.336 603 Q
(/* Pending single-step? */)81.336 615 Q
(if \(thread_info_flags & _TIF_SINGLESTEP\) {)81.336 627 Q
(regs->eflags |= TF_MASK;)129.336 639 Q
(clear_thread_flag\(TIF_SINGLESTEP\);)129.336 651 Q(})81.336 663 Q
(/* deal with pending signal delivery */)81.336 675 Q
(if \(thread_info_flags & _TIF_SIGPENDING\))81.336 687 Q
(do_signal\(regs,oldset\);)129.336 699 Q(clear_thread_flag\(TIF_IRET\);)
81.336 723 Q(})33.336 735 Q 0 Cg EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 11/pg 7)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF
(int fastcall do_signal\(struct pt_regs *regs, sigset_t *oldset\))33.336
117 Q({)33.336 129 Q(siginfo_t info;)81.336 141 Q(int signr;)81.336 153
Q(struct k_sigaction ka;)81.336 165 Q
(/* We could be returning back to kernel mode from an interrupt)90.936
189 Q 6(handler. If)148.536 201 R(so, we don't do anything now.)6 E
(We only)12 E(handle signals when about to return to user mode */)
148.536 213 Q(if \(!user_mode\(regs\)\) return 1;)81.336 225 Q
(if \(!oldset\) oldset = &current->blocked;)81.336 249 Q
(// Find a signal to handle, or return 0 if none.)108.936 273 Q
(// Could be that we woke up on a signal which turned out)108.936 285 Q
(// to be one that we ignore)108.936 297 Q
(signr = get_signal_to_deliver\(&info, &ka, regs, NULL\);)81.336 309 Q
(if \(signr > 0\) {)81.336 321 Q
(return handle_signal\(signr, &info, &ka, oldset, regs\);)129.336 333 Q
(})81.336 345 Q
(/* Recall that the orig_eax slot contains the original value */)96.936
357 Q(/* of the eax register when we first entered kernel mode.)96.936
369 Q(If */)12 E
(/* it is non-zero, then we came in as a system call and the)96.936 381
Q(*/)18 E(/* saved value is the original system call number.)96.936 393
Q 30(The */)12 F
(/* regs->eax slot contains the return value from the system call */)
96.936 405 Q(if \(regs->orig_eax >= 0\) {)81.336 417 Q
(/* If we arrive here, we are returning to user mode from */)96.936 429
Q(/* an interrupted system call, but the signal is being)96.936 441 Q
(*/)18 E(/* ignored, not handled.)96.936 453 Q(*/)204 E
(/* Similar code in handle_signal.)96.936 465 Q(See text.)12 E(*/)78 E
(if \(regs->eax == -ERESTARTNOHAND ||)129.336 477 Q
(regs->eax == -ERESTARTSYS ||)153.336 489 Q
(regs->eax == -ERESTARTNOINTR\) {)153.336 501 Q
(regs->eax = regs->orig_eax;)177.336 513 Q(regs->eip -= 2;)177.336 525 Q
(})129.336 537 Q(// Restart blocks are used when restarting the system)
148.536 549 Q(// call is more complicated than just calling it again.)
148.536 561 Q(// They force re-executing of a special "restart" system)
148.536 573 Q(// call which effects the more complex semantics.)148.536
585 Q(if \(regs->eax == -ERESTART_RESTARTBLOCK\){)129.336 609 Q
(regs->eax = __NR_restart_syscall;)177.336 621 Q(regs->eip -= 2;)177.336
633 Q(})129.336 645 Q(})81.336 657 Q(return 0;)81.336 669 Q(})33.336 681
Q(int get_signal_to_deliver\(siginfo_t *info, struct k_sigaction *retur\
n_ka,)33.336 705 Q(struct pt_regs *regs, void *cookie\))189.336 717 Q({)
33.336 729 Q(sigset_t *mask = &current->blocked;)81.336 741 Q 0 Cg EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 11/pg 8)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF(int signr = 0;)81.336 117 Q
(spin_lock_irq\(&current->sighand->siglock\);)81.336 141 Q(for \(;;\) {)
81.336 153 Q(// For each queued signal)64.8 E(struct k_sigaction *ka;)
99.336 165 Q(/* dequeue_signal examines the signal queue in numerical)
148.536 177 Q(*/)12 E(/* order via the bitmap.)148.536 189 Q
(It then removes that entry from */)12 E
(/* the signal queue and returns the signal number.)148.536 201 Q
(Signals */)12 E(/* which are currently blocked are never selected)
148.536 213 Q(*/)54 E(signr = dequeue_signal\(current, mask, info\);)
117.336 225 Q
(if \(!signr\) break; /* no pending signals, will return 0 */)117.336
249 Q(ka = &current->sighand->action[signr-1];)117.336 261 Q
(if \(ka->sa.sa_handler == SIG_IGN\))117.336 273 Q 6(continue; /*)
177.336 285 R(Try next pending signal */)6 E
(if \(ka->sa.sa_handler != SIG_DFL\) {)117.336 297 Q(*return_ka = *ka;)
177.336 309 Q(if \(ka->sa.sa_flags & SA_ONESHOT\))177.336 333 Q
(ka->sa.sa_handler = SIG_DFL;)225.336 345 Q
(break; /* will return non-zero "signr" value */)177.336 369 Q(})117.336
381 Q(/* If we get here, the handling must be SIG_DFL */)148.536 393 Q
(if \(sig_kernel_ignore\(signr\)\) // If default for this sig)117.336
405 Q 60(continue; //)177.336 417 R(is to ignore)6 E
(/* init process \(pid==1\) gets no signals it doesn't want.)129.336 441
Q(*/)12 E(if \(current->pid == 1\))129.336 453 Q(continue;)177.336 465 Q
(spin_unlock_irq\(&current->sighand->siglock\);)117.336 477 Q
(/* Default action must be to terminate */)126.936 489 Q
(current->flags |= PF_SIGNALED;)117.336 501 Q
(/* If coredump is associated with this signr, do it */)148.536 513 Q
(if \(sig_kernel_coredump\(signr\)\))117.336 525 Q
(do_coredump\(\(long\)signr, signr, regs\);)159.336 537 Q 24
(do_group_exit\(signr\); //)117.336 561 R(Exit with signr as exit code)6
E(/* NOTREACHED */)129.336 573 Q(})81.336 585 Q
(spin_unlock_irq\(&current->sighand->siglock\);)81.336 597 Q
(return signr;)81.336 609 Q(})33.336 621 Q(static int)33.336 657 Q(hand\
le_signal\(unsigned long sig, siginfo_t *info, struct k_sigaction *ka,)
33.336 669 Q(sigset_t *oldset, struct pt_regs * regs\))117.336 681 Q({)
33.336 693 Q(int ret;)81.336 705 Q
(/* Are we returning from an interrupted system call? */)81.336 729 Q
(if \(regs->orig_eax >= 0\) {)81.336 741 Q 0 Cg EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 11/pg 9)71.748 E(\2512013 Jef)142.155 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF(/* If so, check system call restarting.. */)
129.336 117 Q(switch \(regs->eax\) {)129.336 129 Q
(/* system call return value */)72 E(case -ERESTART_RESTARTBLOCK:)
177.336 141 Q(case -ERESTARTNOHAND:)177.336 153 Q(regs->eax = -EINTR;)
225.336 165 Q(break;)225.336 177 Q(case -ERESTARTSYS:)177.336 189 Q
(if \(!\(ka->sa.sa_flags & SA_RESTART\)\) {)225.336 201 Q
(regs->eax = -EINTR;)273.336 213 Q(break;)273.336 225 Q(})225.336 237 Q
(/* fallthrough */)177.336 249 Q(case -ERESTARTNOINTR:)177.336 261 Q
(regs->eax = regs->orig_eax;)225.336 273 Q(regs->eip -= 2;)225.336 285 Q
(})129.336 297 Q(})81.336 309 Q
(/* Set up the expected type of stack frame */)96.936 321 Q
(if \(ka->sa.sa_flags & SA_SIGINFO\))81.336 333 Q
(ret = setup_rt_frame\(sig, ka, info, oldset, regs\);)129.336 345 Q
(else)81.336 357 Q(ret = setup_frame\(sig, ka, oldset, regs\);)129.336
369 Q(if \(ret\) {)81.336 393 Q
(spin_lock_irq\(&current->sighand->siglock\);)129.336 405 Q
(sigorsets\(&current->blocked,&current->blocked,&ka->sa.sa_mask\);)
129.336 417 Q(if \(!\(ka->sa.sa_flags & SA_NODEFER\)\))129.336 429 Q
(sigaddset\(&current->blocked,sig\);)177.336 441 Q 12
(recalc_sigpending\(\); //)129.336 453 R
(Clear TIF_SIGPENDING if no more sigs)6 E
(spin_unlock_irq\(&current->sighand->siglock\);)129.336 465 Q(})81.336
477 Q(return ret;)81.336 501 Q(})33.336 513 Q/F2 13/Times-Bold@0 SF
(Setting up the stack frame to handle signal)149.068 543 Q/F3 13
/Times-Roman@0 SF 1.331(When a signal handler is to be in)33.336 579 R
-.26(vo)-.52 G -.13(ke).26 G(d,).13 E/F4 13/Courier@0 SF(setup_frame)
4.581 E F3 1.331(pushes the follo)4.581 F 1.331(wing onto the)-.325 F F2
(user mode stack)33.336 594 Q F3(:)A F1(struct sigframe {)33.336 606 Q
(void *pretcode;)51.336 618 Q(/* return address after handler */)122.4 E
6(int sig;)51.336 630 R(/* signal number */)216 E(struct sigcontext sc;)
51.336 642 Q(/* hardware context and blocked sigs */)86.4 E
(struct _fpstate fpstate;)51.336 654 Q
(/* used for floating point context*/)78 E(char retcode[8];)51.336 666 Q
(/* historical */)126 E(})33.336 678 Q F3 2.061(The current hardw)33.336
699 R 2.061(are conte)-.13 F 2.061(xt \(stored in the k)-.195 F 2.061
(ernel stack and accessible via the)-.13 F F4(regs)5.311 E F3 .77
(local v)33.336 714 R .769(ariable\) is copied into the)-.325 F F4 .769
(struct sigcontext)4.019 F F3 .769(on the user)4.019 F .769
(-mode stack.)-.26 F(This)7.269 E 2.393
(structure also contains the bit v)33.336 729 R 2.393
(ector of signals which were being block)-.195 F 2.393(ed before the)
-.13 F .248(handler w)33.336 744 R .248(as in)-.13 F -.26(vo)-.52 G(kv)
.26 E .248(ed \(recall that the signal being handled is generally added\
 to the set of)-.195 F 0 Cg EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 11/pg 10)69.498 E(\2512013 Jef)139.905 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF(block)33.336 120 Q .51
(ed signals, plus an)-.13 F 3.76(ya)-.195 G .511
(dditional signals speci\214ed with the)-3.76 F/F2 13/Courier@0 SF
(sigaction)3.761 E F1 .511(system call\).)3.761 F .486(The k)33.336 135
R .485(ernel stack is then modi\214ed so that upon return to user mode,\
 the stack pointer will)-.13 F .616(be the ne)33.336 150 R 3.866(wt)
-.325 G .616(op of the user)-3.866 F .616(-mode stack \(with the)-.26 F
F2(sigframe)3.866 E F1 .617(on the top of the stack\), the)3.866 F 2.072
(%eip re)33.336 165 R 2.072
(gister will be the address of the signal handler routine, the %eax re)
-.195 F 2.071(gister will)-.195 F(contain the signal number)33.336 180 Q
(.)-.715 E(No)33.336 201 Q 6.115(wc)-.325 G 2.866
(ontrol returns to user mode at the address of the handler function.)
-6.115 F 2.866(From the)9.366 F 1.053(standpoint of the handler)33.336
216 R 4.303(,i)-.52 G 4.303(th)-4.303 G 1.053
(as been called from the point in the user')-4.303 F 4.303(sc)-.715 G
1.053(ode where the)-4.303 F 1.029(signal w)33.336 231 R 1.029(as recei)
-.13 F -.195(ve)-.325 G 1.029
(d, as if by a function call, and the signal number is its \214rst ar)
.195 F(gument.)-.234 E .751(\(If the)33.336 246 R F2(SA_SIGINFO)4.001 E
F1 .751(\215ag w)4.001 F .75(as speci\214ed in the)-.13 F F2(sigaction)4
E F1 .75(for this signal, then a more)4 F 3.019
(elaborate stack frame is created which has the 3 ar)33.336 261 R 3.02
(guments: signal number)-.234 F 6.27(,s)-.52 G(iginfo,)-6.27 E(conte)
33.336 276 Q(xt\).)-.195 E .928(The handler is of course free to call)
33.336 297 R F2(longjmp)4.178 E F1 .928
(in which case the stack frame which the)4.178 F -.13(ke)33.336 312 S
1.24(rnel carefully crafted will simply become irrele).13 F -.325(va)
-.325 G 4.49(nt. Ho).325 F(we)-.325 E -.195(ve)-.325 G 2.281 -.52(r, l)
.195 H 1.241(et us assume that the).52 F .412(handler returns.)33.336
327 R .411(It \214nds a special return address on the stack.)6.912 F
.411(This points to a small area)6.911 F 2.318(of memory which the k)
33.336 342 R 2.318(ernel creates in the user)-.13 F 2.318
(-mode address space of each process,)-.26 F .03(called the)33.336 357 R
/F3 13/Times-Italic@0 SF(vsyscall)3.28 E F1 .03(page \(also kno)3.28 F
.029(wn as the)-.325 F F2(vdso)3.279 E F1(re)3.279 E 3.279(gion\). This)
-.195 F .029(page is used for a number)3.279 F 4.74
(of system call interf)33.336 372 R 4.74(acing issues.)-.13 F 4.741
(Here the process \214nds a fe)11.241 F 7.991(wc)-.325 G 4.741
(arefully chosen)-7.991 F(instructions:)33.336 387 Q/F4 10/Courier@0 SF
(__kernel_sigreturn:)33.336 399 Q 27.6(popl %eax)90.936 411 R
(#just discard signal #)206.4 E 27.6(movl $__NR_sigreturn,)90.936 423 R
98.4(%eax #syscall)6 F(#)6 E 33.6(int $0x80)90.936 435 R F1 1.859
(Control no)33.336 450 R 5.109(wr)-.325 G 1.859(e-enters the k)-5.109 F
1.859(ernel with a special system call)-.13 F F2(sys_sigreturn)5.109 E
F1 5.109(,w)C(hich)-5.109 E(tak)33.336 465 Q 2.99(es the user)-.13 F
2.99(-mode hardw)-.26 F 2.99(are conte)-.13 F 2.99(xt which w)-.195 F
2.99(as sa)-.13 F -.195(ve)-.26 G 6.24(do).195 G 6.24(nt)-6.24 G(he)
-6.24 E F3(user)6.24 E 2.99(-mode stac)-.26 F(k)-.26 E F1(and)6.24 E
3.071(copies it back to the)33.336 480 R F3 -.13(ke)6.321 G 3.071
(rnel-mode stac).13 F(k)-.26 E F1 6.321(,w)C 3.071
(here it will be restored to the user)-6.321 F(-mode)-.26 E(re)33.336
495 Q .459(gisters upon return to user mode ag)-.195 F 3.709(ain. The)
-.065 F .459(bit v)3.709 F .459(ector representing signals which were)
-.195 F .482(being block)33.336 510 R .482
(ed prior to the handler is also read out of the user)-.13 F .481
(-mode stack and restored as)-.26 F .634(the current set of block)33.336
525 R .634(ed signals.)-.13 F .634
(The signal handling frame which had been pushed on)7.134 F 1.414
(the user)33.336 540 R 1.414(-mode stack is no)-.26 F 4.663(wd)-.325 G
4.663(iscarded. At)-4.663 F 1.413(this point, the user)4.663 F 1.413
(-mode %esp sa)-.26 F -.195(ve)-.26 G 4.663(do).195 G 4.663(nt)-4.663 G
(he)-4.663 E -.13(ke)33.336 555 S .606(rnel mode stack is once ag).13 F
.606(ain the original v)-.065 F .606(alue, as is the %eip re)-.325 F
.606(gister \(b)-.195 F .607(ut see belo)-.26 F(w)-.325 E .641
(about restarted system calls\), so no)33.336 570 R 3.891(ww)-.325 G .64
(hen control lea)-3.891 F -.195(ve)-.26 G 3.89(st).195 G(he)-3.89 E F2
(sys_sigreturn)3.89 E F1(system)3.89 E 1.367
(call and returns back to user mode, e)33.336 585 R -.195(xe)-.195 G
1.368(cution will resume e).195 F 1.368(xactly where it left of)-.195 F
4.618(f. Of)-.325 F 1.014
(course, if there are additional pending signals, the)33.336 600 R F2
(TIF_SIGPENDING)4.264 E F1 1.014(\215ag will still be)4.264 F
(on, and these signals will be dealt with no)33.336 615 Q -.845(w.)-.325
G 1.878(The \214gure belo)33.336 636 R 5.128(wd)-.325 G 1.878
(epicts a process which has entered k)-5.128 F 1.878(ernel mode while e)
-.13 F -.195(xe)-.195 G 1.878(cuting in).195 F .188
(user mode in the function)33.336 651 R F2(foo\(\))3.438 E F1 6.688(.T)C
.187(his entry may ha)-6.688 F .577 -.195(ve b)-.26 H .187
(een via a system call, a f).195 F .187(ault, or)-.13 F 6.732(ah)33.336
666 S(ardw)-6.732 E 3.482(are interrupt.)-.13 F 6.732(As)9.982 G 3.482
(ignal is about to be deli)-6.732 F -.195(ve)-.325 G 3.482
(red to this process, which has).195 F 1.643(speci\214ed the handler)
33.336 681 R F2(signalhandler\(\))4.893 E F1 1.643
(for the signal number in question.)4.893 F 3.722 -1.04(We s)8.142 H(ee)
1.04 E 2.495(the k)33.336 696 R 2.495(ernel stack and the user)-.13 F
2.495(-mode stack, with the stack frame which the k)-.26 F 2.496
(ernel has)-.13 F(crafted, as control is about to e)33.336 711 Q
(xit the k)-.195 E(ernel and return to user mode.)-.13 E 0 Cg EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 11/pg 11)69.498 E(\2512013 Jef)139.905 E 2.25(fH)-.225 G(akner)
-2.25 E 0 0 288 464 -405.931 654 123.336 525.931 PBEGIN
%%BeginDocument: sigstack.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: sigstack.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Fri Nov 13 00:56:23 2009
%%For: hak@lex ()
%%BoundingBox: 0 0 464 654
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 654 moveto 0 0 lineto 464 0 lineto 464 654 lineto closepath clip newpath
-125.3 738.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
n 4200 1425 m 7200 1425 l 7200 7500 l 4200 7500 l
 cp gs col0 s gr 
% Polyline
n 4200 6300 m
 7200 6300 l gs col0 s gr 
% Polyline
n 4200 7800 m 7200 7800 l 7200 9300 l 4200 9300 l
 cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 2100 9450 m
 9000 9450 l gs col0 s gr  [] 0 sd
% Polyline
n 4200 9600 m 7200 9600 l 7200 12300 l 4200 12300 l
 cp gs col0 s gr 
% Polyline
n 4200 6000 m
 7200 6000 l gs col0 s gr 
% Polyline
n 4200 5400 m
 7200 5400 l gs col0 s gr 
% Polyline
n 4200 5700 m
 7200 5700 l gs col0 s gr 
% Polyline
n 4200 5100 m
 7200 5100 l gs col0 s gr 
% Polyline
n 4200 4800 m
 7200 4800 l gs col0 s gr 
% Polyline
n 4200 4500 m
 7200 4500 l gs col0 s gr 
% Polyline
n 4200 3300 m
 7200 3300 l gs col0 s gr 
% Polyline
gs  clippath
5517 11541 m 5562 11581 l 5663 11468 l 5561 11538 l 5618 11428 l cp
eoclip
n 8475 8250 m
 5550 11550 l gs col0 s gr gr

% arrowhead
n 5618 11428 m 5561 11538 l 5663 11468 l  col0 s
% Polyline
gs  clippath
7260 4770 m 7260 4830 l 7412 4830 l 7292 4800 l 7412 4770 l cp
eoclip
n 8100 4800 m
 7275 4800 l gs col0 s gr gr

% arrowhead
n 7412 4770 m 7292 4800 l 7412 4830 l  col0 s
% Polyline
gs  clippath
5760 11970 m 5760 12030 l 5912 12030 l 5792 12000 l 5912 11970 l cp
eoclip
n 7950 4875 m 7950 12000 l
 5775 12000 l gs col0 s gr gr

% arrowhead
n 5912 11970 m 5792 12000 l 5912 12030 l  col0 s
% Polyline
gs  clippath
5760 11070 m 5760 11130 l 5912 11130 l 5792 11100 l 5912 11070 l cp
eoclip
n 8175 11100 m
 5775 11100 l gs col0 s gr gr

% arrowhead
n 5912 11070 m 5792 11100 l 5912 11130 l  col0 s
% Polyline
gs  clippath
4140 7980 m 4140 7920 l 3988 7920 l 4108 7950 l 3988 7980 l cp
eoclip
n 4425 4950 m 3600 4950 l 3600 7950 l
 4125 7950 l gs col0 s gr gr

% arrowhead
n 3988 7980 m 4108 7950 l 3988 7920 l  col0 s
/Times-Roman ff 200.00 scf sf
2250 1650 m
gs 1 -1 sc (User Stack) col0 sh gr
/Times-Roman ff 200.00 scf sf
4725 6750 m
gs 1 -1 sc (foo\(\) stack frame) col0 sh gr
/Times-Roman ff 200.00 scf sf
2325 10350 m
gs 1 -1 sc (Kernel Stack) col0 sh gr
/Times-Roman ff 200.00 scf sf
2400 7950 m
gs 1 -1 sc (vsyscall) col0 sh gr
/Times-Roman ff 200.00 scf sf
2400 8205 m
gs 1 -1 sc (page) col0 sh gr
/Times-Roman ff 200.00 scf sf
4275 7950 m
gs 1 -1 sc (__kernel_sigreturn:) col0 sh gr
/Times-Roman ff 200.00 scf sf
4275 8205 m
gs 1 -1 sc (       popl     %eax) col0 sh gr
/Times-Roman ff 200.00 scf sf
4275 8460 m
gs 1 -1 sc (       movl   $__NR_sigreturn,%eax) col0 sh gr
/Times-Roman ff 200.00 scf sf
4275 8715 m
gs 1 -1 sc (       int        $0x80) col0 sh gr
/Times-Roman ff 200.00 scf sf
4575 10350 m
gs 1 -1 sc (SAVED REGISTERS:) col0 sh gr
/Times-Roman ff 200.00 scf sf
4575 10605 m
gs 1 -1 sc (                  ....) col0 sh gr
/Times-Roman ff 200.00 scf sf
5100 11055 m
gs 1 -1 sc (      .....) col0 sh gr
/Times-Roman ff 200.00 scf sf
5100 11565 m
gs 1 -1 sc (      ......) col0 sh gr
/Times-Roman ff 200.00 scf sf
5100 11925 m
gs 1 -1 sc (      ....) col0 sh gr
/Times-Roman ff 200.00 scf sf
5100 10725 m
gs 1 -1 sc (      ebp) col0 sh gr
/Times-Roman ff 200.00 scf sf
5100 11250 m
gs 1 -1 sc (      eax) col0 sh gr
/Times-Roman ff 200.00 scf sf
5100 11700 m
gs 1 -1 sc (      eip) col0 sh gr
/Times-Roman ff 200.00 scf sf
5100 12075 m
gs 1 -1 sc (      esp) col0 sh gr
/Times-Roman ff 200.00 scf sf
4875 5025 m
gs 1 -1 sc (Ret Addr) col0 sh gr
/Times-Roman ff 200.00 scf sf
4875 5325 m
gs 1 -1 sc (signum) col0 sh gr
/Times-Roman ff 200.00 scf sf
4875 5625 m
gs 1 -1 sc (sigcontext) col0 sh gr
/Times-Roman ff 200.00 scf sf
4875 5925 m
gs 1 -1 sc (fpstate) col0 sh gr
/Times-Roman ff 200.00 scf sf
4800 6225 m
gs 1 -1 sc (retcode[8]) col0 sh gr
/Times-Roman ff 200.00 scf sf
4500 4725 m
gs 1 -1 sc (ebp saved by sighandler\(\)) col0 sh gr
/Times-Roman ff 200.00 scf sf
4725 3900 m
gs 1 -1 sc (sighandler\(\) stack frame) col0 sh gr
/Times-Roman ff 200.00 scf sf
8400 8025 m
gs 1 -1 sc (Address of) col0 sh gr
/Times-Roman ff 200.00 scf sf
8400 8280 m
gs 1 -1 sc (sighandler\(\)) col0 sh gr
/Times-Roman ff 200.00 scf sf
8025 11850 m
gs 1 -1 sc (Adjusted user mode) col0 sh gr
/Times-Roman ff 200.00 scf sf
8025 12105 m
gs 1 -1 sc (stack pointer) col0 sh gr
/Times-Roman ff 200.00 scf sf
8250 11100 m
gs 1 -1 sc (signal #) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage
%%EndDocument
end PEND/F1 13/Times-Bold@0 SF(sigsuspend)237.351 561.931 Q/F2 13
/Times-Roman@0 SF(Let')33.336 591.931 Q 3.25(sl)-.715 G(ook at the sigs\
uspend system call which came in handy for problem set #7:)-3.25 E/F3 10
/Courier@0 SF(asmlinkage int)33.336 603.931 Q
(sys_sigsuspend\(int history0, int history1, old_sigset_t mask\))33.336
615.931 Q({)33.336 627.931 Q
(struct pt_regs * regs = \(struct pt_regs *\) &history0;)81.336 639.931
Q(sigset_t saveset;)81.336 651.931 Q(mask &= _BLOCKABLE;)81.336 675.931
Q(//e.g. can't block sig#9)68.4 E
(spin_lock_irq\(&current->sighand->siglock\);)81.336 687.931 Q
(saveset = current->blocked;)81.336 699.931 Q
(siginitset\(&current->blocked, mask\);)81.336 711.931 Q
(recalc_sigpending\(\);)81.336 723.931 Q
(spin_unlock_irq\(&current->sighand->siglock\);)81.336 735.931 Q 0 Cg EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 11/pg 12)69.498 E(\2512013 Jef)139.905 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 10/Courier@0 SF(regs->eax = -EINTR;)81.336 117 Q
(while \(1\) {)81.336 129 Q(current->state = TASK_INTERRUPTIBLE;)129.336
141 Q(schedule\(\);)129.336 153 Q(if \(do_signal\(regs, &saveset\)\))
129.336 165 Q(return -EINTR;)177.336 177 Q(})81.336 189 Q(})33.336 201 Q
/F2 13/Times-Roman@0 SF .286(This is f)33.336 222 R .286(airly slopp)
-.13 F 3.536(yc)-.13 G .286(ode in that)-3.536 F/F3 13/Courier@0 SF
(history0)3.536 E F2(and)3.536 E F3(history1)3.536 E F2 .286
(are de\214ned as place-holder)3.536 F -.325(va)33.336 237 S .415
(riables to locate the sa).325 F -.195(ve)-.26 G 3.665(dr).195 G -.195
(eg)-3.665 G .415(ister v).195 F .415(alues which are on the k)-.325 F
.415(ernel stack.)-.13 F .416(Also note that)6.915 F .911
(while from the user)33.336 252 R(-le)-.26 E -.195(ve)-.325 G 4.161(lCl)
.195 G .911(ibrary the signal mask parameter is passed as a pointer)
-4.161 F 4.16(,t)-.52 G(he)-4.16 E .982(library wrapper code has alread\
y dereferenced this pointer and passed the contents in to)33.336 267 R
(the system call.)33.336 282 Q 1.991
(Note that the signal mask is changed under protection of a mute)33.336
303 R 1.99(x, and then with that)-.195 F(mute)33.336 318 Q 3.914(xs)
-.195 G .664(till held)-3.914 F F3(recalc_sigpending)3.914 E F2 .664
(is called which re-e)3.914 F -.325(va)-.325 G .664
(luates the list of pending).325 F 8.368(signals to see if an)33.336 333
R 11.618(yo)-.195 G 11.618(ft)-11.618 G 8.368(hem ha)-11.618 F 8.758
-.195(ve n)-.26 H 9.018 -.325(ow b).195 H 8.368(ecome un-block).325 F
11.618(ed. If)-.13 F 8.368(so, the)11.618 F F3(TIF_SIGPENDING)33.336 348
Q F2 5.313(\215ag gets set.)8.563 F(No)11.814 E 8.564(wt)-.325 G 5.314
(he system call puts the caller into an)-8.564 F 2.192
(interruptible sleep.)33.336 363 R 2.192(When a signal arri)8.692 F
-.195(ve)-.325 G 5.442(sa).195 G 2.192(nd is successfully deli)-5.442 F
-.195(ve)-.325 G 2.191(red \().195 F F3(do_signal)A F2 1.384
(returns a non-zero v)33.336 378 R 1.384(alue\) then)-.325 F F3
(sigsuspend)4.634 E F2 1.384(returns with error)4.634 F F3(EINTR)4.634 E
F2 1.384(\(this particular)4.634 F .04(system call al)33.336 393 R -.13
(wa)-.13 G .04(ys returns an error).13 F .04(...if the signal which w)
-.715 F(ok)-.13 E 3.29(et)-.13 G .04(he process up is handled by)-3.29 F
4.814(as)33.336 408 S 1.564(ignal handler which then does a)-4.814 F F3
(longjmp)4.814 E F2 4.814(,t)C 1.565
(hen the system call does not appear to)-4.814 F(return at all\).)33.336
423 Q/F4 13/Times-Bold@0 SF(Restarting system calls)203.792 453 Q F2
.372(When a signal is posted to a process which is sleeping in a system\
 call \(e.g. w)33.336 483 R .372(aiting for a)-.13 F .421
(character to satisfy a read system call\) in the T)33.336 498 R
(ASK_INTERR)-1.209 E .422(UPTIBLE state, this causes)-.52 F 1.876
(the process to w)33.336 513 R(ak)-.13 E 5.126(eu)-.13 G 5.126(p. The)
-5.126 F 1.876(system call will then f)5.126 F 1.876
(ail with one of a number of error)-.13 F 1.667
(codes which, in the Linux k)33.336 528 R 1.667
(ernel, are internal to the k)-.13 F 1.668(ernel and dictate if and ho)
-.13 F 4.918(wt)-.325 G(he)-4.918 E 1.428(system call may be restarted.)
33.336 543 R 1.428(As an e)7.928 F 1.427(xample, look at the)-.195 F F3
(pipe_read)4.677 E F2 1.427(code in unit 9.)4.677 F .009
(Note that when the)33.336 558 R F3(pipe_wait)3.259 E F2 .009
(returns, if there are an)3.259 F 3.259(yp)-.195 G .01
(ending signals, the read system)-3.259 F(call returns immediately with)
33.336 573 Q F3(ERESTARTSYS)3.25 E F2(.)A .853(When the system call ret\
urns and control is about to go back to user mode, the signal is)33.336
594 R 5.133(noticed. What)33.336 609 R 1.883(happens ne)5.133 F 1.883
(xt depends on the internal error code which the system call)-.195 F
(routine returned:)33.336 624 Q 3.739<8345>33.336 639 S .489
(INTR: This system call can not be restarted.)-3.739 F .488
(The error EINTR will be returned to the)6.988 F(user)33.336 654 Q(.)
-.715 E 5.079<8345>33.336 669 S(REST)-5.079 E(AR)-1.209 E 1.829(TSYS: T\
he system call will be restarted if the disposition of the signal in)
-.78 F 2.599(question is DFL or IGN.)33.336 684 R 2.598
(If there is a handler de\214ned, the system call will only by)9.099 F
3.906(restarted if the SA_REST)33.336 699 R(AR)-1.209 E 7.156<548d>-.78
G 3.906(ag is set for that signal number \(e.g. through the)-7.156 F F3
(sigaction)33.336 714 Q F2(system call\).)3.25 E
(System call restart will happen after the handler returns.)6.5 E 3.25
<8345>33.336 729 S(REST)-3.25 E(AR)-1.209 E
(TNOINTR: The system call will al)-.78 E -.13(wa)-.13 G
(ys be restarted.).13 E 5.567<8345>33.336 744 S(REST)-5.567 E(AR)-1.209
E 2.316(TNOHAND: The system call will be restarted if the signal dispos\
ition is)-.78 F 0 Cg EP
%%Page: 13 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 9/Times-Roman@0 SF(ECE357:Computer Operating Systems)33.336 60 Q
(Unit 11/pg 13)69.498 E(\2512013 Jef)139.905 E 2.25(fH)-.225 G(akner)
-2.25 E/F1 13/Times-Roman@0 SF 2.122(DFL or IGN.)33.336 120 R 2.122
(If there is a handler)8.622 F 5.372(,t)-.52 G 2.123
(he handler will be in)-5.372 F -.26(vo)-.52 G -.13(ke).26 G 5.373(da)
.13 G 2.123(nd upon completion)-5.373 F
(EINTR will be returned from the system call.)33.336 135 Q 6.089<8345>
33.336 150 S(REST)-6.089 E(AR)-1.209 E(T_REST)-.78 E(AR)-1.209 E 2.839
(TBLOCK: This is a special case used for a fe)-.78 F 6.088(wt)-.325 G
(ime-related)-6.088 E
(system calls which require speci\214c code to be e)33.336 165 Q -.195
(xe)-.195 G(cuted prior to system call restart.).195 E .353
(When it has been decided that the system call will be restarted, the)
33.336 186 R/F2 13/Courier@0 SF(regs->eip)3.604 E F1 -.325(va)3.604 G
.354(lue is).325 F 1.499(decremented by tw)33.336 201 R 4.749(ob)-.13 G
4.749(ytes. If)-4.749 F 1.499(there is no signal handler)4.749 F 4.749
(,t)-.52 G 1.499(hen control will immediately)-4.749 F 1.005
(resume in user mode, b)33.336 216 R 1.006(ut instead of e)-.26 F -.195
(xe)-.195 G 1.006(cuting the).195 F/F3 13/Times-Bold@0 SF(next)4.256 E
F1(instruction)4.256 E F3(after)4.256 E F1 1.006(the system call)4.256 F
.726(\(which is a tw)33.336 231 R .725(o-byte instruction)-.13 F F2 .725
(INT $0x80)3.975 F F1 .725(,\) that same system call opcode will be re-)
B -.195(exe)33.336 246 S 3.827(cuted. If).195 F .577(there is a handler)
3.827 F 3.827(,i)-.52 G 3.827(tw)-3.827 G .577(ill be e)-3.827 F -.195
(xe)-.195 G .577(cuted as described abo).195 F -.195(ve)-.195 G 3.828
(,a).195 G .578(nd assuming that)-3.828 F 2.429
(it returns \(as opposed to calling)33.336 261 R F2(longjmp)5.679 E F1
5.679(\)i)C 5.679(tw)-5.679 G 2.429(ill wind up calling the)-5.679 F F2
(sigreturn)5.679 E F1 .473(system call.)33.336 276 R .473
(This will restore the %eip v)6.973 F .473(alue which had pre)-.325 F
.473(viously been decremented by)-.325 F(tw)33.336 291 Q 3.986(ob)-.13 G
.736(ytes before the handler w)-3.986 F .736(as in)-.13 F -.26(vo)-.52 G
-.13(ke).26 G .735(d, and so no).13 F 3.985(ww)-.325 G .735(hen e)-3.985
F -.195(xe)-.195 G .735(cution resumes after the).195 F(handler)33.336
306 Q 3.25(,t)-.52 G(he system call will be re-e)-3.25 E -.195(xe)-.195
G(cuted.).195 E .108(If restarted system calls seem lik)33.336 327 R
3.358(eak)-.13 G .109(luge, it is because the)-3.358 F 3.359(ya)-.195 G
.109(re indeed.)-3.359 F .109(But there is little)6.609 F 6.511
(choice. Once)33.336 342 R 3.261(control lea)6.511 F -.195(ve)-.26 G
6.51(st).195 G 3.26(he k)-6.51 F 3.26(ernel and a signal handler is in)
-.13 F -.26(vo)-.52 G -.13(ke).26 G 6.51(di).13 G 6.51(nt)-6.51 G 3.26
(he user)-6.51 F .22(program, and that handler returns, then something \
must be done if the signal handler is to)33.336 357 R .343
(appear to be seamless.)33.336 372 R .343
(In most cases, an EINTR error return from the interrupted system)6.843
F .523(call is a spurious error)33.336 387 R 3.773(,a)-.52 G .523
(nd mak)-3.773 F .523(es systems programming dif)-.13 F 3.773
(\214cult. Most)-.325 F .523(system calls are)3.773 F 2.526
(designed to be restartable, b)33.336 402 R 2.526
(ut some, because of their semantics, can not be sensibly)-.26 F 2.753
(restarted from scratch.)33.336 417 R 2.754
(The systems programmer is cautioned to read documentation)9.253 F
(carefully for each system call.)33.336 432 Q 0 Cg EP
%%Trailer
end
%%EOF
